// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Js_exn = require("bs-platform/lib/js/js_exn.js");
var Belt_Result = require("bs-platform/lib/js/belt_Result.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Caml_js_exceptions = require("bs-platform/lib/js/caml_js_exceptions.js");

function try_(fn) {
  try {
    return /* Ok */Block.__(0, [Curry._1(fn, /* () */0)]);
  }
  catch (raw_exn){
    var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);
    if (exn[0] === Js_exn.$$Error) {
      return /* Error */Block.__(1, [exn[1]]);
    } else {
      throw exn;
    }
  }
}

function getFirstError(resultList) {
  return List.fold_left((function (finalMaybeError, currentResult) {
                if (finalMaybeError !== undefined) {
                  return Caml_option.some(Caml_option.valFromOption(finalMaybeError));
                } else if (currentResult.tag) {
                  return Caml_option.some(currentResult[0]);
                } else {
                  return undefined;
                }
              }), undefined, resultList);
}

function sequence(resultList) {
  return List.fold_left((function (acc, item) {
                return Belt_Result.flatMap(acc, (function (accArray) {
                              return Belt_Result.map(item, (function (v) {
                                            return List.append(accArray, v);
                                          }));
                            }));
              }), /* Ok */Block.__(0, [/* [] */0]), resultList);
}

var getExn = Belt_Result.getExn;

var mapWithDefaultU = Belt_Result.mapWithDefaultU;

var mapWithDefault = Belt_Result.mapWithDefault;

var mapU = Belt_Result.mapU;

var map = Belt_Result.map;

var flatMapU = Belt_Result.flatMapU;

var flatMap = Belt_Result.flatMap;

var getWithDefault = Belt_Result.getWithDefault;

var isOk = Belt_Result.isOk;

var isError = Belt_Result.isError;

var eqU = Belt_Result.eqU;

var eq = Belt_Result.eq;

var cmpU = Belt_Result.cmpU;

var cmp = Belt_Result.cmp;

exports.getExn = getExn;
exports.mapWithDefaultU = mapWithDefaultU;
exports.mapWithDefault = mapWithDefault;
exports.mapU = mapU;
exports.map = map;
exports.flatMapU = flatMapU;
exports.flatMap = flatMap;
exports.getWithDefault = getWithDefault;
exports.isOk = isOk;
exports.isError = isError;
exports.eqU = eqU;
exports.eq = eq;
exports.cmpU = cmpU;
exports.cmp = cmp;
exports.try_ = try_;
exports.getFirstError = getFirstError;
exports.sequence = sequence;
/* No side effect */
