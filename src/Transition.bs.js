// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Js_types = require("bs-platform/lib/js/js_types.js");

function equalsTrue(state) {
  var match = Js_types.classify(state);
  if (typeof match === "number") {
    return match === 1;
  } else {
    return false;
  }
}

function equalsFalse(state) {
  var match = Js_types.classify(state);
  if (typeof match === "number") {
    return match === 0;
  } else {
    return false;
  }
}

function equalsNull(state) {
  var match = Js_types.classify(state);
  if (typeof match === "number") {
    return match === 2;
  } else {
    return false;
  }
}

function negate(value) {
  return !value;
}

function create(fromState, toState) {
  var hasChanged = function (selector) {
    return Curry._1(selector, fromState) !== Curry._1(selector, toState);
  };
  var hasChangedToMatch = function (selector, predicate) {
    if (hasChanged(selector)) {
      return Curry._1(predicate, Curry._1(selector, toState));
    } else {
      return false;
    }
  };
  var hasChangedToTrue = function (selector) {
    return hasChangedToMatch(selector, equalsTrue);
  };
  var hasChangedToFalse = function (selector) {
    return hasChangedToMatch(selector, equalsFalse);
  };
  var hasChangedToNull = function (selector) {
    return hasChangedToMatch(selector, equalsNull);
  };
  var hasChangedToNotNull = function (selector) {
    return hasChangedToMatch(selector, (function (state) {
                  return !equalsNull(state);
                }));
  };
  return {
          from: fromState,
          to: toState,
          hasChanged: hasChanged,
          hasChangedToMatch: hasChangedToMatch,
          hasChangedToTrue: hasChangedToTrue,
          hasChangedToFalse: hasChangedToFalse,
          hasChangedToNull: hasChangedToNull,
          hasChangedToNotNull: hasChangedToNotNull
        };
}

exports.equalsTrue = equalsTrue;
exports.equalsFalse = equalsFalse;
exports.equalsNull = equalsNull;
exports.negate = negate;
exports.create = create;
/* No side effect */
